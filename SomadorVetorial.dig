<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>GHDL</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>somador_vetorial</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>A_i:32,B_i:32,mode_i,vecSize_i:2</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity somador_vetorial is
    port (
        A_i       : in  STD_LOGIC_VECTOR(31 downto 0);
        B_i       : in  STD_LOGIC_VECTOR(31 downto 0);
        mode_i    : in  STD_LOGIC;
        vecSize_i : in  STD_LOGIC_VECTOR(1 downto 0);
        S_o       : out STD_LOGIC_VECTOR(31 downto 0)
    );
end entity somador_vetorial;

architecture Behavioral of somador_vetorial is
begin
    vector_operation_proc : process(A_i, B_i, mode_i, vecSize_i)
    begin
        case vecSize_i is

            when &quot;00&quot; =&gt; -- Vetor com 8 elementos de 4 bits
                for i in 0 to 7 loop
                    if mode_i = &apos;0&apos; then
                        S_o((i*4)+3 downto i*4) &lt;= std_logic_vector(
                            unsigned(A_i((i*4)+3 downto i*4)) + 
                            unsigned(B_i((i*4)+3 downto i*4))
                        );
                    else
                        S_o((i*4)+3 downto i*4) &lt;= std_logic_vector(
                            unsigned(A_i((i*4)+3 downto i*4)) - 
                            unsigned(B_i((i*4)+3 downto i*4))
                        );
                    end if;
                end loop;

            when &quot;01&quot; =&gt; -- Vetor com 4 elementos de 8 bits
                for i in 0 to 3 loop
                    if mode_i = &apos;0&apos; then
                        S_o((i*8)+7 downto i*8) &lt;= std_logic_vector(
                            unsigned(A_i((i*8)+7 downto i*8)) + 
                            unsigned(B_i((i*8)+7 downto i*8))
                        );
                    else
                        S_o((i*8)+7 downto i*8) &lt;= std_logic_vector(
                            unsigned(A_i((i*8)+7 downto i*8)) - 
                            unsigned(B_i((i*8)+7 downto i*8))
                        );
                    end if;
                end loop;

            when &quot;10&quot; =&gt; -- Vetor com 2 elementos de 16 bits
                for i in 0 to 1 loop
                    if mode_i = &apos;0&apos; then
                        S_o((i*16)+15 downto i*16) &lt;= std_logic_vector(
                            unsigned(A_i((i*16)+15 downto i*16)) + 
                            unsigned(B_i((i*16)+15 downto i*16))
                        );
                    else
                        S_o((i*16)+15 downto i*16) &lt;= std_logic_vector(
                            unsigned(A_i((i*16)+15 downto i*16)) - 
                            unsigned(B_i((i*16)+15 downto i*16))
                        );
                    end if;
                end loop;

            when &quot;11&quot; =&gt; -- Vetor com 1 elemento de 32 bits
                if mode_i = &apos;0&apos; then
                    S_o &lt;= std_logic_vector(unsigned(A_i) + unsigned(B_i));
                else
                    S_o &lt;= std_logic_vector(unsigned(A_i) - unsigned(B_i));
                end if;

            when others =&gt;
                S_o &lt;= (others =&gt; &apos;X&apos;);
                
        end case;
    end process vector_operation_proc;
    
end architecture Behavioral;</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>S_o:32</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
      </elementAttributes>
      <pos x="780" y="-360"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="-380"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="-340"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>intFormat</string>
          <intFormat>dec</intFormat>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="1020" y="-320"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>vecSize</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="620" y="-260"/>
    </visualElement>
    <visualElement>
      <elementName>DipSwitch</elementName>
      <elementAttributes/>
      <pos x="620" y="-300"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="620" y="-340"/>
      <p2 x="780" y="-340"/>
    </wire>
    <wire>
      <p1 x="620" y="-260"/>
      <p2 x="760" y="-260"/>
    </wire>
    <wire>
      <p1 x="760" y="-360"/>
      <p2 x="780" y="-360"/>
    </wire>
    <wire>
      <p1 x="760" y="-280"/>
      <p2 x="780" y="-280"/>
    </wire>
    <wire>
      <p1 x="620" y="-380"/>
      <p2 x="760" y="-380"/>
    </wire>
    <wire>
      <p1 x="620" y="-300"/>
      <p2 x="780" y="-300"/>
    </wire>
    <wire>
      <p1 x="980" y="-320"/>
      <p2 x="1020" y="-320"/>
    </wire>
    <wire>
      <p1 x="760" y="-380"/>
      <p2 x="760" y="-360"/>
    </wire>
    <wire>
      <p1 x="760" y="-280"/>
      <p2 x="760" y="-260"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>